@model CommonTestModel
@{
    ViewData["Title"] = "Flex Fields - Demo mode";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label>Installments</label>
            <input type="text" class="form-control" id="txtInstallments" placeholder="1,2,3,6,12">
        </div>
        <div class="form-group">
            <label>Picker mode</label>
            <select id="ddlPicker" class="form-control">
                <option value="slider">Slider</option>
                <option value="buttons">Buttons</option>
                <option value="single">Single</option>
                <option value="dropdown">Dropdown</option>
            </select>
        </div>
        <button type="button" class="btn btn-primary" onclick="updateFlexFields()">Update Flex Fields</button>
    </div>
</div>
<hr />

<div class="splitit-default-ui grouped">
    <div class="splitit-cc-group">
        <div id="card-number"></div>
        <div id="expiration-date"></div>
        <div id="cvv"></div>
        <div class="splitit-cc-group-separator"></div>
    </div>

    <div id="installment-picker"></div>
    <div id="error-box"></div>
    <div id="terms-conditions"></div>
    <button id="btn-pay"></button>
</div>

@section Scripts {
    <script>
        var flexFieldsInstance = Splitit.FlexFields.setup({
            fields: {
                number: {
                    selector: "#card-number"
                },
                cvv: {
                    selector: "#cvv"
                },
                expirationDate: {
                    selector: "#expiration-date"
                }
            },
            installmentPicker: {
                selector: "#installment-picker"
            },
            termsConditions: {
                selector: "#terms-conditions"
            },
            errorBox: {
                selector: "#error-box"
            },
            paymentButton: {
                selector: "#btn-pay"
            }
        }).demo({
            installments: [1,2,3],
            pickerMode: "buttons",
            amount: 1000
        });

        function updateFlexFields(){
            flexFieldsInstance.demo({
                installments: $("#txtInstallments").val().split(',').map(function(x) {
                    return parseInt(x);
                }),
                pickerMode: $("#ddlPicker").val(),
                amount: 1000
            })
        }

    </script>
}